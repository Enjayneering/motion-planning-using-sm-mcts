Searching game tree in timestep 0...
Max timehorizon: 2
Actions to choose Agent 0: dict_values([{'num_count': 792, 'sum_payoffs': 4.1399999985510005, 'action': [0.0, 0]}, {'num_count': 808, 'sum_payoffs': 5.286315787623474, 'action': [1.0, 0]}])
Weights num count: [0.4946908182386009, 0.504684572142411]
Actions to choose Agent 1: dict_values([{'num_count': 780, 'sum_payoffs': 3.239999998866, 'action': [0.0, 0]}, {'num_count': 820, 'sum_payoffs': 6.186315787308475, 'action': [1.0, 0]}])
Weights num count: [0.4871955028107433, 0.5121798875702686]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Searching game tree in timestep 1...
Max timehorizon: 1
Actions to choose Agent 0: dict_values([{'num_count': 794, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}, {'num_count': 806, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}])
Weights num count: [0.49594003747657717, 0.5034353529044348]
Actions to choose Agent 1: dict_values([{'num_count': 794, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}, {'num_count': 806, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}])
Weights num count: [0.49594003747657717, 0.5034353529044348]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Terminal state: [1.0, 2.0, 1.5707963267948966, 2.0, 1.0, 0.0, 2]
Timestep: 2
Runtime: 0.27587366104125977 s
