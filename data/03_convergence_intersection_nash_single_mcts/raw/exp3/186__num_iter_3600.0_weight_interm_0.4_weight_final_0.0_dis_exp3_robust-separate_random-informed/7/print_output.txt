Searching game tree in timestep 0...
Max timehorizon: 2
Actions to choose Agent 0: dict_values([{'num_count': 1785, 'sum_payoffs': 5.759999997984001, 'action': [0.0, 0]}, {'num_count': 1815, 'sum_payoffs': 5.376315787591975, 'action': [1.0, 0]}])
Weights num count: [0.49583333333333335, 0.5041666666666667]
Actions to choose Agent 1: dict_values([{'num_count': 1679, 'sum_payoffs': 4.949999998267501, 'action': [0.0, 0]}, {'num_count': 1921, 'sum_payoffs': 6.186315787308475, 'action': [1.0, 0]}])
Weights num count: [0.4663888888888889, 0.5336111111111111]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Searching game tree in timestep 1...
Max timehorizon: 1
Actions to choose Agent 0: dict_values([{'num_count': 1918, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}, {'num_count': 1682, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}])
Weights num count: [0.5327777777777778, 0.4672222222222222]
Actions to choose Agent 1: dict_values([{'num_count': 1887, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}, {'num_count': 1713, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}])
Weights num count: [0.5241666666666667, 0.47583333333333333]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Terminal state: [1.0, 2.0, 1.5707963267948966, 2.0, 1.0, 0.0, 2]
Timestep: 2
Runtime: 1.2878961563110352 s
