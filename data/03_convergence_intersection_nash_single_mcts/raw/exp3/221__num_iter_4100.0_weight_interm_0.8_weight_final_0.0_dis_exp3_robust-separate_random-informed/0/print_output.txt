Searching game tree in timestep 0...
Max timehorizon: 2
Actions to choose Agent 0: dict_values([{'num_count': 2169, 'sum_payoffs': 6.186315788081763, 'action': [1.0, 0]}, {'num_count': 1931, 'sum_payoffs': 4.94999999888625, 'action': [0.0, 0]}])
Weights num count: [0.5290243902439025, 0.47097560975609754]
Actions to choose Agent 1: dict_values([{'num_count': 2210, 'sum_payoffs': 6.186315788081763, 'action': [1.0, 0]}, {'num_count': 1890, 'sum_payoffs': 4.94999999888625, 'action': [0.0, 0]}])
Weights num count: [0.5390243902439025, 0.4609756097560976]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Searching game tree in timestep 1...
Max timehorizon: 1
Actions to choose Agent 0: dict_values([{'num_count': 2138, 'sum_payoffs': 1.799999999595, 'action': [1.0, 0]}, {'num_count': 1962, 'sum_payoffs': 0.8999999997975, 'action': [0.0, 0]}])
Weights num count: [0.5214634146341464, 0.47853658536585364]
Actions to choose Agent 1: dict_values([{'num_count': 2014, 'sum_payoffs': 0.8999999997975, 'action': [0.0, 0]}, {'num_count': 2086, 'sum_payoffs': 1.799999999595, 'action': [1.0, 0]}])
Weights num count: [0.49121951219512194, 0.5087804878048781]
Selected final action: [1.0, 0, 1.0, 0]
Total payoff list: [0.0, 0.0]
Terminal state: [1.0, 2.0, 1.5707963267948966, 2.0, 1.0, 0.0, 2]
Timestep: 2
Runtime: 1.636589765548706 s
