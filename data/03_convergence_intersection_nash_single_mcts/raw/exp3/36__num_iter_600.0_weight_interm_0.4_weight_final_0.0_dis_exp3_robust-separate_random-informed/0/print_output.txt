Searching game tree in timestep 0...
Max timehorizon: 2
Actions to choose Agent 0: dict_values([{'num_count': 314, 'sum_payoffs': 6.659999997669001, 'action': [0.0, 0]}, {'num_count': 286, 'sum_payoffs': 5.286315787623474, 'action': [1.0, 0]}])
Weights num count: [0.5233333333333333, 0.4766666666666667]
Actions to choose Agent 1: dict_values([{'num_count': 305, 'sum_payoffs': 6.186315787308475, 'action': [1.0, 0]}, {'num_count': 295, 'sum_payoffs': 5.759999997984001, 'action': [0.0, 0]}])
Weights num count: [0.5083333333333333, 0.49166666666666664]
Selected final action: [0.0, 0, 1.0, 0]
Total payoff list: [0.99999999965, 0.99999999965]
Searching game tree in timestep 1...
Max timehorizon: 1
Actions to choose Agent 0: dict_values([{'num_count': 304, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}, {'num_count': 296, 'sum_payoffs': 0.899999999685, 'action': [1.0, 0]}])
Weights num count: [0.5066666666666667, 0.49333333333333335]
Actions to choose Agent 1: dict_values([{'num_count': 285, 'sum_payoffs': 0.0, 'action': [0.0, 0]}, {'num_count': 315, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}])
Weights num count: [0.475, 0.525]
Selected final action: [0.0, 0, 1.0, 0]
Total payoff list: [1.0526315785789473, 1.0526315785789473]
Terminal state: [1.0, 0.0, 1.5707963267948966, 2.0, 1.0, 0.0, 2]
Timestep: 2
Runtime: 0.28705787658691406 s
