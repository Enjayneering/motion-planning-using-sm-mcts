Searching game tree in timestep 0...
Max timehorizon: 2
Actions to choose Agent 0: dict_values([{'num_count': 302, 'sum_payoffs': 4.949999998267501, 'action': [0.0, 0]}, {'num_count': 298, 'sum_payoffs': 4.859999998299, 'action': [1.0, 0]}])
Weights num count: [0.5033333333333333, 0.49666666666666665]
Actions to choose Agent 1: dict_values([{'num_count': 322, 'sum_payoffs': 5.759999997984001, 'action': [1.0, 0]}, {'num_count': 278, 'sum_payoffs': 4.0499999985825, 'action': [0.0, 0]}])
Weights num count: [0.5366666666666666, 0.4633333333333333]
Selected final action: [0.0, 0, 1.0, 0]
Total payoff list: [0.99999999965, 0.99999999965]
Searching game tree in timestep 1...
Max timehorizon: 1
Actions to choose Agent 0: dict_values([{'num_count': 294, 'sum_payoffs': 1.79999999937, 'action': [0.0, 0]}, {'num_count': 306, 'sum_payoffs': 0.899999999685, 'action': [1.0, 0]}])
Weights num count: [0.49, 0.51]
Actions to choose Agent 1: dict_values([{'num_count': 297, 'sum_payoffs': 1.79999999937, 'action': [1.0, 0]}, {'num_count': 303, 'sum_payoffs': 0.899999999685, 'action': [0.0, 0]}])
Weights num count: [0.495, 0.505]
Selected final action: [1.0, 0, 0.0, 0]
Total payoff list: [0.5263157892894736, 0.5263157892894736]
Terminal state: [1.0, 1.0, 1.5707963267948966, 1.0, 1.0, 0.0, 2]
Timestep: 2
Runtime: 0.2373795509338379 s
